# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'patch_reader.ui'
##
## Created by: Qt User Interface Compiler version 6.9.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QAbstractScrollArea, QApplication, QCheckBox,
    QFrame, QGraphicsView, QGridLayout, QGroupBox,
    QHBoxLayout, QLabel, QLayout, QListWidget,
    QListWidgetItem, QMainWindow, QMenu, QMenuBar,
    QPushButton, QSizePolicy, QSlider, QTabWidget,
    QTextEdit, QVBoxLayout, QWidget)

from InteractiveGraphicsView import InteractiveGraphicsView

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(963, 855)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.actionNew = QAction(MainWindow)
        self.actionNew.setObjectName(u"actionNew")
        self.actionOpen = QAction(MainWindow)
        self.actionOpen.setObjectName(u"actionOpen")
        self.actionSave = QAction(MainWindow)
        self.actionSave.setObjectName(u"actionSave")
        self.actionSave_As = QAction(MainWindow)
        self.actionSave_As.setObjectName(u"actionSave_As")
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionAdd_Cht = QAction(MainWindow)
        self.actionAdd_Cht.setObjectName(u"actionAdd_Cht")
        self.actionDrop_Cht = QAction(MainWindow)
        self.actionDrop_Cht.setObjectName(u"actionDrop_Cht")
        self.actionSelect_Target = QAction(MainWindow)
        self.actionSelect_Target.setObjectName(u"actionSelect_Target")
        self.actionRead_Patches = QAction(MainWindow)
        self.actionRead_Patches.setObjectName(u"actionRead_Patches")
        self.actionReset_Grid = QAction(MainWindow)
        self.actionReset_Grid.setObjectName(u"actionReset_Grid")
        self.actionMake_TI3 = QAction(MainWindow)
        self.actionMake_TI3.setObjectName(u"actionMake_TI3")
        self.actionProperties = QAction(MainWindow)
        self.actionProperties.setObjectName(u"actionProperties")
        self.actionCreate_targets = QAction(MainWindow)
        self.actionCreate_targets.setObjectName(u"actionCreate_targets")
        self.actionCreate_ICC_profile = QAction(MainWindow)
        self.actionCreate_ICC_profile.setObjectName(u"actionCreate_ICC_profile")
        self.actionCreate_DCP_profile = QAction(MainWindow)
        self.actionCreate_DCP_profile.setObjectName(u"actionCreate_DCP_profile")
        self.actionCreate_cube_LUT = QAction(MainWindow)
        self.actionCreate_cube_LUT.setObjectName(u"actionCreate_cube_LUT")
        self.actionAbout = QAction(MainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        self.actionCalibrate_Target = QAction(MainWindow)
        self.actionCalibrate_Target.setObjectName(u"actionCalibrate_Target")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.verticalLayout = QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.chtTabs = QTabWidget(self.centralwidget)
        self.chtTabs.setObjectName(u"chtTabs")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.chtTabs.sizePolicy().hasHeightForWidth())
        self.chtTabs.setSizePolicy(sizePolicy1)
        self.chtTabs.setMinimumSize(QSize(0, 30))
        self.chtTabs.setMaximumSize(QSize(16777215, 30))

        self.verticalLayout.addWidget(self.chtTabs)

        self.l_workPlacer_H = QWidget(self.centralwidget)
        self.l_workPlacer_H.setObjectName(u"l_workPlacer_H")
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Expanding)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.l_workPlacer_H.sizePolicy().hasHeightForWidth())
        self.l_workPlacer_H.setSizePolicy(sizePolicy2)
        self.horizontalLayout_5 = QHBoxLayout(self.l_workPlacer_H)
        self.horizontalLayout_5.setSpacing(4)
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.horizontalLayout_5.setContentsMargins(2, 2, 2, 2)
        self.l_imagePlacer = QWidget(self.l_workPlacer_H)
        self.l_imagePlacer.setObjectName(u"l_imagePlacer")
        sizePolicy.setHeightForWidth(self.l_imagePlacer.sizePolicy().hasHeightForWidth())
        self.l_imagePlacer.setSizePolicy(sizePolicy)
        self.horizontalLayout_3 = QHBoxLayout(self.l_imagePlacer)
        self.horizontalLayout_3.setSpacing(2)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.tiff_grid = InteractiveGraphicsView(self.l_imagePlacer)
        self.tiff_grid.setObjectName(u"tiff_grid")
        sizePolicy.setHeightForWidth(self.tiff_grid.sizePolicy().hasHeightForWidth())
        self.tiff_grid.setSizePolicy(sizePolicy)
        self.tiff_grid.setMinimumSize(QSize(100, 100))
        self.tiff_grid.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.tiff_grid.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.tiff_grid.setRenderHints(QPainter.RenderHint.Antialiasing|QPainter.RenderHint.SmoothPixmapTransform)
        self.tiff_grid.setTransformationAnchor(QGraphicsView.ViewportAnchor.AnchorViewCenter)
        self.tiff_grid.setResizeAnchor(QGraphicsView.ViewportAnchor.AnchorViewCenter)
        self.tiff_grid.setViewportUpdateMode(QGraphicsView.ViewportUpdateMode.FullViewportUpdate)
        self.tiff_grid.setOptimizationFlags(QGraphicsView.OptimizationFlag.DontAdjustForAntialiasing)

        self.horizontalLayout_3.addWidget(self.tiff_grid)

        self.l_buttonsPlacer_V = QWidget(self.l_imagePlacer)
        self.l_buttonsPlacer_V.setObjectName(u"l_buttonsPlacer_V")
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Expanding)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.l_buttonsPlacer_V.sizePolicy().hasHeightForWidth())
        self.l_buttonsPlacer_V.setSizePolicy(sizePolicy3)
        self.l_buttonsPlacer_V.setMinimumSize(QSize(200, 0))
        self.l_buttonsPlacer_V.setMaximumSize(QSize(250, 16777215))
        self.verticalLayout_3 = QVBoxLayout(self.l_buttonsPlacer_V)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.cht_grp = QGroupBox(self.l_buttonsPlacer_V)
        self.cht_grp.setObjectName(u"cht_grp")
        sizePolicy4 = QSizePolicy(QSizePolicy.Policy.Maximum, QSizePolicy.Policy.Expanding)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.cht_grp.sizePolicy().hasHeightForWidth())
        self.cht_grp.setSizePolicy(sizePolicy4)
        self.cht_grp.setMinimumSize(QSize(225, 80))
        self.cht_grp.setMaximumSize(QSize(190, 16777215))
        self.cht_grp.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.cht_grp.setAutoFillBackground(False)
        self.cht_grp.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.gridLayout = QGridLayout(self.cht_grp)
        self.gridLayout.setSpacing(8)
        self.gridLayout.setObjectName(u"gridLayout")
        self.gridLayout.setContentsMargins(12, 9, 12, 6)
        self.btn_prevCHT = QPushButton(self.cht_grp)
        self.btn_prevCHT.setObjectName(u"btn_prevCHT")

        self.gridLayout.addWidget(self.btn_prevCHT, 0, 0, 1, 1)

        self.btn_nextCHT = QPushButton(self.cht_grp)
        self.btn_nextCHT.setObjectName(u"btn_nextCHT")

        self.gridLayout.addWidget(self.btn_nextCHT, 0, 1, 1, 1)

        self.btn_selectTiff = QPushButton(self.cht_grp)
        self.btn_selectTiff.setObjectName(u"btn_selectTiff")

        self.gridLayout.addWidget(self.btn_selectTiff, 1, 0, 1, 2)


        self.verticalLayout_3.addWidget(self.cht_grp, 0, Qt.AlignmentFlag.AlignHCenter)

        self.tiff_grp = QGroupBox(self.l_buttonsPlacer_V)
        self.tiff_grp.setObjectName(u"tiff_grp")
        sizePolicy5 = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.Expanding)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.tiff_grp.sizePolicy().hasHeightForWidth())
        self.tiff_grp.setSizePolicy(sizePolicy5)
        self.tiff_grp.setMinimumSize(QSize(225, 0))
        self.tiff_grp.setMaximumSize(QSize(16777215, 16777215))
        self.tiff_grp.setFlat(False)
        self.gridLayout_3 = QGridLayout(self.tiff_grp)
        self.gridLayout_3.setSpacing(8)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.gridLayout_3.setContentsMargins(12, -1, 12, 6)
        self.slide_Lightness = QSlider(self.tiff_grp)
        self.slide_Lightness.setObjectName(u"slide_Lightness")
        self.slide_Lightness.setMaximum(150)
        self.slide_Lightness.setSingleStep(5)
        self.slide_Lightness.setPageStep(15)
        self.slide_Lightness.setValue(100)
        self.slide_Lightness.setOrientation(Qt.Orientation.Horizontal)
        self.slide_Lightness.setTickPosition(QSlider.TickPosition.TicksBelow)
        self.slide_Lightness.setTickInterval(20)

        self.gridLayout_3.addWidget(self.slide_Lightness, 2, 0, 1, 2)

        self.lbl_PatchScale = QLabel(self.tiff_grp)
        self.lbl_PatchScale.setObjectName(u"lbl_PatchScale")

        self.gridLayout_3.addWidget(self.lbl_PatchScale, 4, 0, 1, 1)

        self.div_line1 = QFrame(self.tiff_grp)
        self.div_line1.setObjectName(u"div_line1")
        self.div_line1.setFrameShape(QFrame.Shape.HLine)
        self.div_line1.setFrameShadow(QFrame.Shadow.Sunken)

        self.gridLayout_3.addWidget(self.div_line1, 14, 0, 1, 2)

        self.btn_rotCCW = QPushButton(self.tiff_grp)
        self.btn_rotCCW.setObjectName(u"btn_rotCCW")

        self.gridLayout_3.addWidget(self.btn_rotCCW, 15, 0, 1, 1)

        self.btn_rotCW = QPushButton(self.tiff_grp)
        self.btn_rotCW.setObjectName(u"btn_rotCW")

        self.gridLayout_3.addWidget(self.btn_rotCW, 15, 1, 1, 1)

        self.chk_ShowPatches = QCheckBox(self.tiff_grp)
        self.chk_ShowPatches.setObjectName(u"chk_ShowPatches")

        self.gridLayout_3.addWidget(self.chk_ShowPatches, 10, 0, 1, 1)

        self.lbl_PatchPersents = QLabel(self.tiff_grp)
        self.lbl_PatchPersents.setObjectName(u"lbl_PatchPersents")

        self.gridLayout_3.addWidget(self.lbl_PatchPersents, 4, 1, 1, 1)

        self.slide_PatchScale = QSlider(self.tiff_grp)
        self.slide_PatchScale.setObjectName(u"slide_PatchScale")
        self.slide_PatchScale.setMaximum(200)
        self.slide_PatchScale.setValue(100)
        self.slide_PatchScale.setOrientation(Qt.Orientation.Horizontal)
        self.slide_PatchScale.setTickPosition(QSlider.TickPosition.TicksAbove)
        self.slide_PatchScale.setTickInterval(10)

        self.gridLayout_3.addWidget(self.slide_PatchScale, 7, 0, 1, 2)

        self.chk_ShowColors = QCheckBox(self.tiff_grp)
        self.chk_ShowColors.setObjectName(u"chk_ShowColors")

        self.gridLayout_3.addWidget(self.chk_ShowColors, 11, 0, 1, 1)

        self.btn_ResetGrid = QPushButton(self.tiff_grp)
        self.btn_ResetGrid.setObjectName(u"btn_ResetGrid")
        self.btn_ResetGrid.setMinimumSize(QSize(199, 23))

        self.gridLayout_3.addWidget(self.btn_ResetGrid, 17, 0, 1, 2)

        self.lbl_LightnessValue = QLabel(self.tiff_grp)
        self.lbl_LightnessValue.setObjectName(u"lbl_LightnessValue")

        self.gridLayout_3.addWidget(self.lbl_LightnessValue, 1, 1, 1, 1)

        self.lbl_Lightness = QLabel(self.tiff_grp)
        self.lbl_Lightness.setObjectName(u"lbl_Lightness")

        self.gridLayout_3.addWidget(self.lbl_Lightness, 1, 0, 1, 1)

        self.div_line_2 = QFrame(self.tiff_grp)
        self.div_line_2.setObjectName(u"div_line_2")
        self.div_line_2.setFrameShape(QFrame.Shape.HLine)
        self.div_line_2.setFrameShadow(QFrame.Shadow.Sunken)

        self.gridLayout_3.addWidget(self.div_line_2, 8, 0, 1, 2)

        self.chk_ShowRisks = QCheckBox(self.tiff_grp)
        self.chk_ShowRisks.setObjectName(u"chk_ShowRisks")

        self.gridLayout_3.addWidget(self.chk_ShowRisks, 10, 1, 1, 1)

        self.btn_FlipH = QPushButton(self.tiff_grp)
        self.btn_FlipH.setObjectName(u"btn_FlipH")

        self.gridLayout_3.addWidget(self.btn_FlipH, 16, 0, 1, 1)

        self.btn_FlipV = QPushButton(self.tiff_grp)
        self.btn_FlipV.setObjectName(u"btn_FlipV")

        self.gridLayout_3.addWidget(self.btn_FlipV, 16, 1, 1, 1)


        self.verticalLayout_3.addWidget(self.tiff_grp, 0, Qt.AlignmentFlag.AlignHCenter)

        self.img_grp = QGroupBox(self.l_buttonsPlacer_V)
        self.img_grp.setObjectName(u"img_grp")
        sizePolicy2.setHeightForWidth(self.img_grp.sizePolicy().hasHeightForWidth())
        self.img_grp.setSizePolicy(sizePolicy2)
        self.img_grp.setMinimumSize(QSize(0, 160))
        self.horizontalLayout = QHBoxLayout(self.img_grp)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(10, 5, 6, 10)
        self.display_grp = QGroupBox(self.img_grp)
        self.display_grp.setObjectName(u"display_grp")
        self.display_grp.setMinimumSize(QSize(80, 140))
        self.display_grp.setMaximumSize(QSize(80, 120))
        self.verticalLayout_2 = QVBoxLayout(self.display_grp)
        self.verticalLayout_2.setSpacing(8)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(6, -1, 6, 6)
        self.lst_Images = QListWidget(self.display_grp)
        self.lst_Images.setObjectName(u"lst_Images")
        self.lst_Images.setProperty(u"showDropIndicator", False)
        self.lst_Images.setDefaultDropAction(Qt.DropAction.IgnoreAction)
        self.lst_Images.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectItems)

        self.verticalLayout_2.addWidget(self.lst_Images)

        self.chk_showPreview = QCheckBox(self.display_grp)
        self.chk_showPreview.setObjectName(u"chk_showPreview")

        self.verticalLayout_2.addWidget(self.chk_showPreview)


        self.horizontalLayout.addWidget(self.display_grp, 0, Qt.AlignmentFlag.AlignTop)

        self.imginfo_grp = QGroupBox(self.img_grp)
        self.imginfo_grp.setObjectName(u"imginfo_grp")
        sizePolicy6 = QSizePolicy(QSizePolicy.Policy.Maximum, QSizePolicy.Policy.Preferred)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.imginfo_grp.sizePolicy().hasHeightForWidth())
        self.imginfo_grp.setSizePolicy(sizePolicy6)
        self.imginfo_grp.setMinimumSize(QSize(120, 120))
        self.imginfo_grp.setMaximumSize(QSize(16777215, 120))
        self.verticalLayout_4 = QVBoxLayout(self.imginfo_grp)
        self.verticalLayout_4.setSpacing(8)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.verticalLayout_4.setContentsMargins(15, -1, 0, 6)
        self.lbl_Camera = QLabel(self.imginfo_grp)
        self.lbl_Camera.setObjectName(u"lbl_Camera")

        self.verticalLayout_4.addWidget(self.lbl_Camera)

        self.lbl_Temp = QLabel(self.imginfo_grp)
        self.lbl_Temp.setObjectName(u"lbl_Temp")

        self.verticalLayout_4.addWidget(self.lbl_Temp)

        self.lbl_Exposure = QLabel(self.imginfo_grp)
        self.lbl_Exposure.setObjectName(u"lbl_Exposure")

        self.verticalLayout_4.addWidget(self.lbl_Exposure)

        self.lbl_Filmscan = QLabel(self.imginfo_grp)
        self.lbl_Filmscan.setObjectName(u"lbl_Filmscan")

        self.verticalLayout_4.addWidget(self.lbl_Filmscan)


        self.horizontalLayout.addWidget(self.imginfo_grp, 0, Qt.AlignmentFlag.AlignTop)


        self.verticalLayout_3.addWidget(self.img_grp, 0, Qt.AlignmentFlag.AlignBottom)

        self.btn_ReadPatches = QPushButton(self.l_buttonsPlacer_V)
        self.btn_ReadPatches.setObjectName(u"btn_ReadPatches")
        self.btn_ReadPatches.setMinimumSize(QSize(200, 0))

        self.verticalLayout_3.addWidget(self.btn_ReadPatches, 0, Qt.AlignmentFlag.AlignHCenter)


        self.horizontalLayout_3.addWidget(self.l_buttonsPlacer_V)


        self.horizontalLayout_5.addWidget(self.l_imagePlacer)


        self.verticalLayout.addWidget(self.l_workPlacer_H)

        self.l_logsPlacer_H = QFrame(self.centralwidget)
        self.l_logsPlacer_H.setObjectName(u"l_logsPlacer_H")
        self.l_logsPlacer_H.setMinimumSize(QSize(0, 150))
        self.l_logsPlacer_H.setMaximumSize(QSize(16777215, 150))
        self.l_BottomLogs = QVBoxLayout(self.l_logsPlacer_H)
        self.l_BottomLogs.setSpacing(0)
        self.l_BottomLogs.setObjectName(u"l_BottomLogs")
        self.l_BottomLogs.setSizeConstraint(QLayout.SizeConstraint.SetMaximumSize)
        self.l_BottomLogs.setContentsMargins(0, 0, 0, 2)
        self.app_log = QTextEdit(self.l_logsPlacer_H)
        self.app_log.setObjectName(u"app_log")
        sizePolicy7 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        sizePolicy7.setHorizontalStretch(100)
        sizePolicy7.setVerticalStretch(100)
        sizePolicy7.setHeightForWidth(self.app_log.sizePolicy().hasHeightForWidth())
        self.app_log.setSizePolicy(sizePolicy7)
        self.app_log.setMinimumSize(QSize(300, 150))
        self.app_log.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.app_log.setAcceptDrops(False)
        self.app_log.setSizeAdjustPolicy(QAbstractScrollArea.SizeAdjustPolicy.AdjustIgnored)
        self.app_log.setUndoRedoEnabled(False)
        self.app_log.setReadOnly(True)
        self.app_log.setMarkdown(u"")
        self.app_log.setAcceptRichText(False)

        self.l_BottomLogs.addWidget(self.app_log)


        self.verticalLayout.addWidget(self.l_logsPlacer_H)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 963, 33))
        sizePolicy8 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)
        sizePolicy8.setHorizontalStretch(0)
        sizePolicy8.setVerticalStretch(0)
        sizePolicy8.setHeightForWidth(self.menubar.sizePolicy().hasHeightForWidth())
        self.menubar.setSizePolicy(sizePolicy8)
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuCHT = QMenu(self.menubar)
        self.menuCHT.setObjectName(u"menuCHT")
        self.menuTools = QMenu(self.menubar)
        self.menuTools.setObjectName(u"menuTools")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        MainWindow.setMenuBar(self.menubar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuCHT.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionProperties)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuCHT.addAction(self.actionAdd_Cht)
        self.menuCHT.addAction(self.actionDrop_Cht)
        self.menuCHT.addSeparator()
        self.menuCHT.addAction(self.actionSelect_Target)
        self.menuCHT.addSeparator()
        self.menuCHT.addAction(self.actionRead_Patches)
        self.menuCHT.addSeparator()
        self.menuCHT.addAction(self.actionReset_Grid)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionCreate_targets)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionMake_TI3)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionCreate_ICC_profile)
        self.menuTools.addAction(self.actionCreate_DCP_profile)
        self.menuTools.addAction(self.actionCreate_cube_LUT)
        self.menuTools.addAction(self.actionCalibrate_Target)
        self.menuHelp.addAction(self.actionAbout)

        self.retranslateUi(MainWindow)

        self.chtTabs.setCurrentIndex(-1)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionNew.setText(QCoreApplication.translate("MainWindow", u"New Project ...", None))
#if QT_CONFIG(tooltip)
        self.actionNew.setToolTip(QCoreApplication.translate("MainWindow", u"Create a new pcl file (the old file discarded if any)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionNew.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionOpen.setText(QCoreApplication.translate("MainWindow", u"Open Project ...", None))
#if QT_CONFIG(tooltip)
        self.actionOpen.setToolTip(QCoreApplication.translate("MainWindow", u"Open pcl file", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOpen.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave.setText(QCoreApplication.translate("MainWindow", u"Save Project", None))
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_As.setText(QCoreApplication.translate("MainWindow", u"Save PCL As...", None))
#if QT_CONFIG(tooltip)
        self.actionSave_As.setToolTip(QCoreApplication.translate("MainWindow", u"Save pcl with a new name", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSave_As.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Alt+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
#if QT_CONFIG(shortcut)
        self.actionExit.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_Cht.setText(QCoreApplication.translate("MainWindow", u"Add Cht...", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_Cht.setToolTip(QCoreApplication.translate("MainWindow", u"Add patch grid to pcl set", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionAdd_Cht.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+1", None))
#endif // QT_CONFIG(shortcut)
        self.actionDrop_Cht.setText(QCoreApplication.translate("MainWindow", u"Drop Cht...", None))
#if QT_CONFIG(tooltip)
        self.actionDrop_Cht.setToolTip(QCoreApplication.translate("MainWindow", u"Remove current patch grid from pcl set", None))
#endif // QT_CONFIG(tooltip)
        self.actionSelect_Target.setText(QCoreApplication.translate("MainWindow", u"Select Target File...", None))
#if QT_CONFIG(tooltip)
        self.actionSelect_Target.setToolTip(QCoreApplication.translate("MainWindow", u"Select the color  target image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionSelect_Target.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+2", None))
#endif // QT_CONFIG(shortcut)
        self.actionRead_Patches.setText(QCoreApplication.translate("MainWindow", u"Read Patches", None))
#if QT_CONFIG(tooltip)
        self.actionRead_Patches.setToolTip(QCoreApplication.translate("MainWindow", u"Read colors from the target", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionRead_Patches.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+R", None))
#endif // QT_CONFIG(shortcut)
        self.actionReset_Grid.setText(QCoreApplication.translate("MainWindow", u"Reset Grid", None))
#if QT_CONFIG(tooltip)
        self.actionReset_Grid.setToolTip(QCoreApplication.translate("MainWindow", u"Reset grid points to initial state", None))
#endif // QT_CONFIG(tooltip)
        self.actionMake_TI3.setText(QCoreApplication.translate("MainWindow", u"Create TI3...", None))
#if QT_CONFIG(tooltip)
        self.actionMake_TI3.setToolTip(QCoreApplication.translate("MainWindow", u"Create ti3 file from current pcl", None))
#endif // QT_CONFIG(tooltip)
        self.actionProperties.setText(QCoreApplication.translate("MainWindow", u"Project Properties ...", None))
#if QT_CONFIG(tooltip)
        self.actionProperties.setToolTip(QCoreApplication.translate("MainWindow", u"Tune up pcl file", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreate_targets.setText(QCoreApplication.translate("MainWindow", u"Create targets", None))
#if QT_CONFIG(tooltip)
        self.actionCreate_targets.setToolTip(QCoreApplication.translate("MainWindow", u"Generate target grids and images", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreate_ICC_profile.setText(QCoreApplication.translate("MainWindow", u"Create ICC profile...", None))
#if QT_CONFIG(tooltip)
        self.actionCreate_ICC_profile.setToolTip(QCoreApplication.translate("MainWindow", u"Run a ICC profile wizard", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreate_DCP_profile.setText(QCoreApplication.translate("MainWindow", u"Create DCM profile", None))
#if QT_CONFIG(tooltip)
        self.actionCreate_DCP_profile.setToolTip(QCoreApplication.translate("MainWindow", u"Run DCM profile generation wizard", None))
#endif // QT_CONFIG(tooltip)
        self.actionCreate_cube_LUT.setText(QCoreApplication.translate("MainWindow", u"Create .cube LUT", None))
#if QT_CONFIG(tooltip)
        self.actionCreate_cube_LUT.setToolTip(QCoreApplication.translate("MainWindow", u"Run a  .cube LUT generation wizard", None))
#endif // QT_CONFIG(tooltip)
        self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About PatchReader...", None))
#if QT_CONFIG(tooltip)
        self.actionAbout.setToolTip(QCoreApplication.translate("MainWindow", u"About the program", None))
#endif // QT_CONFIG(tooltip)
        self.actionCalibrate_Target.setText(QCoreApplication.translate("MainWindow", u"Calibrate Target...", None))
#if QT_CONFIG(tooltip)
        self.cht_grp.setToolTip(QCoreApplication.translate("MainWindow", u"Expected patches on the target", None))
#endif // QT_CONFIG(tooltip)
        self.cht_grp.setTitle(QCoreApplication.translate("MainWindow", u"CHT", None))
#if QT_CONFIG(tooltip)
        self.btn_prevCHT.setToolTip(QCoreApplication.translate("MainWindow", u"Stitch to previous cht file", None))
#endif // QT_CONFIG(tooltip)
        self.btn_prevCHT.setText(QCoreApplication.translate("MainWindow", u"Prev", None))
#if QT_CONFIG(shortcut)
        self.btn_prevCHT.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+Left", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.btn_nextCHT.setToolTip(QCoreApplication.translate("MainWindow", u"Stitch to next cht file", None))
#endif // QT_CONFIG(tooltip)
        self.btn_nextCHT.setText(QCoreApplication.translate("MainWindow", u"Next", None))
#if QT_CONFIG(shortcut)
        self.btn_nextCHT.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+Right", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.btn_selectTiff.setToolTip(QCoreApplication.translate("MainWindow", u"Select the target image", None))
#endif // QT_CONFIG(tooltip)
        self.btn_selectTiff.setText(QCoreApplication.translate("MainWindow", u"Select Target File", None))
#if QT_CONFIG(tooltip)
        self.tiff_grp.setToolTip(QCoreApplication.translate("MainWindow", u"Target file name", None))
#endif // QT_CONFIG(tooltip)
        self.tiff_grp.setTitle(QCoreApplication.translate("MainWindow", u"Grid", None))
#if QT_CONFIG(tooltip)
        self.slide_Lightness.setToolTip(QCoreApplication.translate("MainWindow", u"Lightness of the target (does not impact the original image)", None))
#endif // QT_CONFIG(tooltip)
        self.lbl_PatchScale.setText(QCoreApplication.translate("MainWindow", u"Patch Scale", None))
        self.btn_rotCCW.setText(QCoreApplication.translate("MainWindow", u"Rot CCW", None))
        self.btn_rotCW.setText(QCoreApplication.translate("MainWindow", u"Rot CW", None))
#if QT_CONFIG(tooltip)
        self.chk_ShowPatches.setToolTip(QCoreApplication.translate("MainWindow", u"Show/Hide patch areas", None))
#endif // QT_CONFIG(tooltip)
        self.chk_ShowPatches.setText(QCoreApplication.translate("MainWindow", u"Show Patches", None))
#if QT_CONFIG(shortcut)
        self.chk_ShowPatches.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+W", None))
#endif // QT_CONFIG(shortcut)
        self.lbl_PatchPersents.setText(QCoreApplication.translate("MainWindow", u"100%", None))
#if QT_CONFIG(tooltip)
        self.slide_PatchScale.setToolTip(QCoreApplication.translate("MainWindow", u"Scale of patch zone", None))
#endif // QT_CONFIG(tooltip)
        self.chk_ShowColors.setText(QCoreApplication.translate("MainWindow", u"Show Colors", None))
#if QT_CONFIG(tooltip)
        self.btn_ResetGrid.setToolTip(QCoreApplication.translate("MainWindow", u"Reset grid points to initial state", None))
#endif // QT_CONFIG(tooltip)
        self.btn_ResetGrid.setText(QCoreApplication.translate("MainWindow", u"Reset Grid", None))
        self.lbl_LightnessValue.setText(QCoreApplication.translate("MainWindow", u"100%", None))
        self.lbl_Lightness.setText(QCoreApplication.translate("MainWindow", u"Lightness", None))
#if QT_CONFIG(tooltip)
        self.chk_ShowRisks.setToolTip(QCoreApplication.translate("MainWindow", u"Show/Hide bad recognized patches", None))
#endif // QT_CONFIG(tooltip)
        self.chk_ShowRisks.setText(QCoreApplication.translate("MainWindow", u"Show Risks", None))
#if QT_CONFIG(shortcut)
        self.chk_ShowRisks.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Shift+W", None))
#endif // QT_CONFIG(shortcut)
        self.btn_FlipH.setText(QCoreApplication.translate("MainWindow", u"Flip Vert", None))
        self.btn_FlipV.setText(QCoreApplication.translate("MainWindow", u"Flip Hor", None))
        self.img_grp.setTitle(QCoreApplication.translate("MainWindow", u"Image", None))
        self.display_grp.setTitle(QCoreApplication.translate("MainWindow", u"Display", None))
        self.chk_showPreview.setText(QCoreApplication.translate("MainWindow", u"Preview", None))
        self.imginfo_grp.setTitle(QCoreApplication.translate("MainWindow", u"Target Info", None))
        self.lbl_Camera.setText(QCoreApplication.translate("MainWindow", u"Camera", None))
        self.lbl_Temp.setText(QCoreApplication.translate("MainWindow", u"10000 K", None))
        self.lbl_Exposure.setText(QCoreApplication.translate("MainWindow", u"1/500 f2.8", None))
        self.lbl_Filmscan.setText(QCoreApplication.translate("MainWindow", u"Filmscan", None))
#if QT_CONFIG(tooltip)
        self.btn_ReadPatches.setToolTip(QCoreApplication.translate("MainWindow", u"Read colors from the target", None))
#endif // QT_CONFIG(tooltip)
        self.btn_ReadPatches.setText(QCoreApplication.translate("MainWindow", u"Read Patches", None))
        self.app_log.setPlaceholderText("")
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuCHT.setTitle(QCoreApplication.translate("MainWindow", u"CHT", None))
        self.menuTools.setTitle(QCoreApplication.translate("MainWindow", u"Tools", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"?", None))
    # retranslateUi

